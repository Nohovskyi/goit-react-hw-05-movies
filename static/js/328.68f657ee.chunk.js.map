{"version":3,"file":"static/js/328.68f657ee.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,wBACTE,EAAU,UAAMF,EAAN,iBACVG,EAAM,UAAMH,EAAN,WAIL,SAAeI,IAAtB,4CAAO,OAAP,oBAAO,yGAAkCC,EAAlC,+BAAyC,EACxCC,EAAe,IAAIC,gBAAgB,CACvCC,QAAST,EACTM,KAAMA,IAHH,kBAKEI,EAAAA,EAAAA,IAAA,UAAaR,EAAb,YAA0BK,KAL5B,mEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,8EACCL,EAAe,IAAIC,gBAAgB,CACvCC,QAAST,EACTa,MAAOD,IAHJ,kBAKEF,EAAAA,EAAAA,IAAA,UAAaP,EAAb,YAA2BI,KAL7B,kEAQA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gFACCC,EAAWD,EACXR,EAAe,IAAIC,gBAAgB,CACvCC,QAAST,IAHN,kBAKEU,EAAAA,EAAAA,IAAA,UAAaN,GAAb,OAAsBY,EAAtB,YAAkCT,KALpC,kEAQA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gFACCC,EAAWD,EACXR,EAAe,IAAIC,gBAAgB,CACvCC,QAAST,IAHN,kBAKEU,EAAAA,EAAAA,IAAA,UACFT,EADE,kBACgBe,EADhB,oBACoCT,KANtC,kEAUA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,gFACCC,EAAWD,EACXR,EAAe,IAAIC,gBAAgB,CACvCC,QAAST,IAHN,kBAKEU,EAAAA,EAAAA,IAAA,UAAaT,EAAb,kBAA+Be,EAA/B,oBAAmDT,KALrD,kE,sIC3CP,EAAuB,mBAAvB,EAAuD,yBAAvD,EAA6F,yB,SC+C7F,EA3Ca,WACX,IAGQY,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uGACyBP,EAAAA,EAAAA,IAAiBE,GAD1C,OACQM,EADR,OAEQC,EAAOD,EAASC,KAAKJ,KAC3BC,EAAQG,GAHV,4CADc,uBAAC,WAAD,wBAMdC,EACD,GAAE,CAACR,KAKF,8BACGG,EAAKM,QACJ,eAAIC,UAAWC,EAAf,SACGR,EAAKS,KAAI,YAA4C,IAAzChB,EAAwC,EAAxCA,GAAIiB,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,gBAAaL,UAAWC,EAAxB,WACE,gBACEK,IAAKH,EAvBH,kCAuB8BA,EAxB9C,yHAyBcI,IAAI,SACJC,MAAM,SAER,cAAGR,UAAWC,EAAd,SAA+BG,KAC/B,eAAGJ,UAAWC,EAAd,mBAAqCI,OAP9BnB,EAUZ,OAGH,mEAIP,C","sources":["api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9f3449ca8495a13b6d35e887839f0061';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\n\n\nexport async function fetchTrendingFilms(page = 1) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    page: page,\n  });\n  return axios.get(`${TREND_URL}?${searchParams}`);\n}\n\nexport async function fetchSearchedFilms(content) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: content,\n  });\n  return axios.get(`${SEARCH_URL}?${searchParams}`);\n}\n\nexport async function fetchFilmById(id) {\n  const movie_id = id;\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  return axios.get(`${ID_URL}${movie_id}?${searchParams}`);\n}\n\nexport async function fetchCreditsById(id) {\n  const movie_id = id;\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  return axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?${searchParams}`\n  );\n}\n\nexport async function fetchReviewsById(id) {\n  const movie_id = id;\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  return axios.get(`${BASE_URL}/movie/${movie_id}/reviews?${searchParams}`);\n}\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"list__item\":\"Cast_list__item__6kI+k\",\"list__text\":\"Cast_list__text__kDDBg\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCreditsById } from '../../api';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const noImagePoster =\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1200px-No-Image-Placeholder.svg.png';\n  const pathImage = 'https://image.tmdb.org/t/p/w500';\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function creditsMovies() {\n      const response = await fetchCreditsById(movieId);\n      const data = response.data.cast;\n      setCast(data);\n    }\n    creditsMovies();\n  }, [movieId]);\n\n//   console.log(cast);\n    \n  return (\n    <>\n      {cast.length ? (\n        <ul className={css.list}>\n          {cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <li key={id} className={css.list__item}>\n                <img\n                  src={profile_path ? pathImage + profile_path : noImagePoster}\n                  alt=\"poster\"\n                  width=\"170\"\n                />\n                <p className={css.list__text}>{name}</p>\n                <p className={css.list__text}>Role: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We do not have any cast for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","fetchTrendingFilms","page","searchParams","URLSearchParams","api_key","axios","fetchSearchedFilms","content","query","fetchFilmById","id","movie_id","fetchCreditsById","fetchReviewsById","movieId","useParams","useState","cast","setCast","useEffect","response","data","creditsMovies","length","className","css","map","profile_path","name","character","src","alt","width"],"sourceRoot":""}
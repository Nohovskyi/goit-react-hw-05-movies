{"version":3,"file":"static/js/76.bff4553f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.jsx","api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__6fEfu\",\"button\":\"MovieDetails_button__9VA3h\",\"filmInfo\":\"MovieDetails_filmInfo__HlrNl\",\"filmInfo__details__text\":\"MovieDetails_filmInfo__details__text__fqLjG\",\"filmInfo__details__title\":\"MovieDetails_filmInfo__details__title__M6ndU\",\"filmInfo__additional\":\"MovieDetails_filmInfo__additional__VPo9r\",\"filmInfo__additional__reviews\":\"MovieDetails_filmInfo__additional__reviews__daM9C\",\"filmInfo__additional__cast\":\"MovieDetails_filmInfo__additional__cast__wkpL5\"};","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState, Suspense, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchFilmById } from '../../api';\nimport { Loader } from '../../components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [filmInfo, setFilmInfo] = useState(null);\n  const pathImage = 'https://image.tmdb.org/t/p/w500';\n  const noImagePoster =\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1200px-No-Image-Placeholder.svg.png';\n\n  const location = useLocation();\n  console.log(location.state);\n\n  const searchPath = useRef(location.state?.from.search);\n  console.log(searchPath);\n\n  const initialPath = useRef(location.state?.from.pathname);\n  console.log(initialPath.current);\n\n  let backLink = '';\n  if (initialPath.current === '/') {\n    backLink = '/';\n  } else backLink = `/movies/${searchPath.current}`;\n\n  useEffect(() => {\n    fetchFilmById(movieId).then(r => setFilmInfo(r.data));\n  }, [movieId]);\n\n  return (\n    <div className={css.container}>\n      <Link\n        to={backLink !== '/movies/undefined' ? backLink : '/'}\n        className={css.button}\n      >\n        {'<- Go back'}\n      </Link>\n      {filmInfo && (\n        <>\n          <Suspense fallback={<Loader />}>\n            <div key={movieId} className={css.filmInfo}>\n              <img\n                src={\n                  filmInfo.poster_path\n                    ? pathImage + filmInfo.poster_path\n                    : noImagePoster\n                }\n                alt={filmInfo.original_title}\n                width=\"300\"\n              />\n              <div className={css.filmInfo__details}>\n                <h2 className={css.filmInfo__details__title}>\n                  {filmInfo.original_title}\n                </h2>\n                <p className={css.filmInfo__details__text}>\n                  User Score: {filmInfo.vote_average.toFixed(2)}%\n                </p>\n                <h3 className={css.filmInfo__details__title}>Overview</h3>\n                <p className={css.filmInfo__details__text}>\n                  {filmInfo.overview}\n                </p>\n                <h3 className={css.filmInfo__details__title}>Genres</h3>\n                <p className={css.filmInfo__details__text}>\n                  {filmInfo.genres.map(genre => genre.name).join(', ')}\n                </p>\n              </div>\n            </div>\n          </Suspense>\n          <div className={css.filmInfo__additional}>\n            <h3 className={css.filmInfo__details__title}>\n              Additional information\n            </h3>\n            <Link to=\"cast\" className={css.filmInfo__additional__cast}>\n              Cast\n            </Link>\n            <Link to=\"reviews\" className={css.filmInfo__additional__reviews}>\n              Reviews\n            </Link>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '9f3449ca8495a13b6d35e887839f0061';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\n\n\nexport async function fetchTrendingFilms(page = 1) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    page: page,\n  });\n  return axios.get(`${TREND_URL}?${searchParams}`);\n}\n\nexport async function fetchSearchedFilms(content) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: content,\n  });\n  return axios.get(`${SEARCH_URL}?${searchParams}`);\n}\n\nexport async function fetchFilmById(id) {\n  const movie_id = id;\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  return axios.get(`${ID_URL}${movie_id}?${searchParams}`);\n}\n\nexport async function fetchCreditsById(id) {\n  const movie_id = id;\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  return axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?${searchParams}`\n  );\n}\n\nexport async function fetchReviewsById(id) {\n  const movie_id = id;\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  return axios.get(`${BASE_URL}/movie/${movie_id}/reviews?${searchParams}`);\n}\n\n\n\n\n\n\n\n"],"names":["movieId","useParams","useState","filmInfo","setFilmInfo","location","useLocation","console","log","state","searchPath","useRef","from","search","initialPath","pathname","current","backLink","useEffect","fetchFilmById","then","r","data","className","css","to","Suspense","fallback","Loader","src","poster_path","alt","original_title","width","vote_average","toFixed","overview","genres","map","genre","name","join","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","fetchTrendingFilms","page","searchParams","URLSearchParams","api_key","axios","fetchSearchedFilms","content","query","id","movie_id","fetchCreditsById","fetchReviewsById"],"sourceRoot":""}